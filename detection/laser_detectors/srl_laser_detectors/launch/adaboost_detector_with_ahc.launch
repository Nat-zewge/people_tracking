<!-- Generic Adaboost detector launch file, filename of learned model must be provided externally -->
<launch>
    <arg name="model"/> <!-- full path to learned classifier model -->
    <arg name="suffix"/> <!-- must be set if running multiple instances -->
	<arg name="laser" default="laser"/> <!-- laser topic -->
    <arg name="detected_persons" default="detected_persons"/> <!-- output detected persons topic -->
    <arg name="detection_id_increment" default="1"/>
    <arg name="detection_id_offset" default="0"/>
    
    <arg name="min_avg_distance_from_sensor"/>
    <arg name="max_avg_distance_from_sensor"/>
    <arg name="min_points_per_segment"/>
    <arg name="max_points_per_segment"/>

    <arg name="pose_variance" default="0.2"/>
    <arg name="adaboost_threshold" default="0.0"/> <!-- decision threshold for the signum function -->

    <remap from="laser" to="$(arg laser)"/>
    <remap from="detected_persons" to="$(arg detected_persons)"/>

    <node name="laser_segmentation$(arg suffix)" type="ahc_segmentation" pkg="srl_laser_segmentation">
        <param name="min_avg_distance_from_sensor" value="$(arg min_avg_distance_from_sensor)"/>
        <param name="max_avg_distance_from_sensor" value="$(arg max_avg_distance_from_sensor)"/>
        <param name="min_points_per_segment" value="$(arg min_points_per_segment)"/>
        <param name="max_points_per_segment" value="$(arg max_points_per_segment)"/>
    </node>

    <node name="laser_detector$(arg suffix)" type="detector" pkg="srl_laser_detectors" output="screen">
        <param name="type" value="adaboost"/>
        <param name="model" value="$(arg model)"/>
        <param name="detection_id_increment" value="$(arg detection_id_increment)"/>
        <param name="detection_id_offset" value="$(arg detection_id_offset)"/>
        <param name="pose_variance" value="$(arg pose_variance)"/>
        <param name="adaboost_threshold" value="$(arg adaboost_threshold)"/>
    </node>

</launch>